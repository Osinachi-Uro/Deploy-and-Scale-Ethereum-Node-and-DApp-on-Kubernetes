apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-notifications-cm
  namespace: argocd
data:
  config.yaml: |
    services:
      slack:
        token: \$slack-token
    
    templates:
      app-deployed: |
        message: |
          üöÄ **{{.app.metadata.name}}** successfully deployed!
        slack:
          attachments: |
            [{
              "title": "{{.app.metadata.name}} - Deployment Successful",
              "title_link": "{{.context.argocdUrl}}/applications/{{.app.metadata.name}}",
              "color": "#18be52",
              "fields": [
                {
                  "title": "Environment",
                  "value": "{{.app.spec.destination.namespace}}",
                  "short": true
                },
                {
                  "title": "Sync Status", 
                  "value": "{{.app.status.sync.status}}",
                  "short": true
                },
                {
                  "title": "Health",
                  "value": "{{.app.status.health.status}}",
                  "short": true
                }
              ]
            }]

      app-sync-failed: |
        message: |
          ‚ùå **{{.app.metadata.name}}** deployment failed!
        slack:
          attachments: |
            [{
              "title": "{{.app.metadata.name}} - Deployment Failed",
              "title_link": "{{.context.argocdUrl}}/applications/{{.app.metadata.name}}",
              "color": "#E96D76",
              "fields": [
                {
                  "title": "Sync Status",
                  "value": "{{.app.status.sync.status}}",
                  "short": true
                },
                {
                  "title": "Operation State",
                  "value": "{{.app.status.operationState.phase}}",
                  "short": true
                }
              ]
            }]

    triggers:
      on-deployed:
        - when: app.status.operationState.phase in ['Succeeded'] and app.status.health.status == 'Healthy'
          oncePer: app.status.sync.revision
          send:
          - app-deployed
      
      on-sync-failed:
        - when: app.status.operationState.phase in ['Error', 'Failed']
          send:
          - app-sync-failed

    subscriptions:
      - recipients:
        - slack
        triggers:
        - on-deployed
        - on-sync-failed