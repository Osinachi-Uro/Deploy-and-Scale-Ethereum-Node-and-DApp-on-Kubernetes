name: Configure ArgoCD Slack Alert

on:
  workflow_run:
    workflows: ["Deploy Election DApp"]
    types:
      - completed 
  push:
    branches: [ main ]
    paths:
      - 'alerts/*'
      - '.github/workflows/argocd-slack-alert.yaml'
  workflow_dispatch:
    inputs:
      working_directory:
        description: "Working directory"
        required: true
        default: "alerts"
env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  EKS_CLUSTER_NAME: ${{ secrets.EKS_CLUSTER_NAME }}
  SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}

jobs:
  deploy:
    name: Configure alerts
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Update kubeconfig
      run: |
        aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name ${{ env.EKS_CLUSTER_NAME }}


    - name: Create ArgoCD notifications secret
      run: |
        kubectl -n argocd create secret generic argocd-notifications-secret \
          --from-literal=slack-token="${{ secrets.SLACK_TOKEN }}" \
          --dry-run=client -o yaml | kubectl apply -f -

    - name: Apply ArgoCD configuration
      run: |
        kubectl apply -f alerts/argocd-notifications-cm.yaml
        kubectl rollout restart deployment argocd-notifications-controller -n argocd

    - name: Create ArgoCD Application
      run: |
        echo "Creating ArgoCD Application..."
        kubectl apply -f alerts/argocd-application.yaml